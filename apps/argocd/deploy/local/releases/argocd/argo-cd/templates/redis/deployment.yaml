---
# Source: argo-cd/templates/redis/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-redis
  labels:
    helm.sh/chart: argo-cd-3.35.4
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: redis
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: "6.2-alpine"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        helm.sh/chart: argo-cd-3.35.4
        app.kubernetes.io/name: argocd-redis
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/component: redis
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: "6.2-alpine"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      containers:
      - name: argocd-redis
        args:
        - --save
        - ""
        - --appendonly
        - "no"
        image: arm64v8/redis:6.2-alpine
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
        ports:
        - containerPort: 6379
          name: redis
        resources:
          {}
      - name: metrics
        env:
        - name: REDIS_ADDR
          value: redis://localhost:6379
        - name: REDIS_EXPORTER_WEB_LISTEN_ADDRESS
          value: 0.0.0.0:9121
        image: oliver006/redis_exporter:latest-arm64
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9121
          name: metrics
          protocol: TCP
        resources:
          {}
        securityContext:
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
