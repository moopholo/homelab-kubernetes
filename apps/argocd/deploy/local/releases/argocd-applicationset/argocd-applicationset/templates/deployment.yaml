---
# Source: argocd-applicationset/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: argocd-applicationset
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-applicationset
      app.kubernetes.io/instance: argocd-applicationset
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-applicationset
        app.kubernetes.io/instance: argocd-applicationset
    spec:
      serviceAccountName: argocd-applicationset
      securityContext:
        {}
      containers:
        - name: argocd-applicationset
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - entrypoint.sh
            - applicationset-controller
            - --metrics-addr=:8080
            - --probe-addr=:8081
            - --namespace=argocd
            - --argocd-repo-server=argocd-repo-server:8081
            - --policy=sync
            - --debug=false
            - --dry-run=false
            - --loglevel=error
          image: "albertdixon/argocd-applicationset:linux-arm64-master"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: webhook
              containerPort: 7000
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
      volumes:
      - emptyDir: {}
        name: tmp-dir
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - emptyDir: {}
        name: gpg-keyring
